name: HypoLab Backend + Frontend CI/CD

on:
  push:
    branches:
      - main

jobs:
  backend_build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test1234
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python for Django
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'

    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install Django dependencies
      run: |
        pip install -r hypolab/requirements.txt

    - name: Wait for PostgreSQL to be ready
      run: |
        while ! pg_isready -h localhost -p 5432; do
          sleep 1
        done

#    - name: Run Django tests
#      run: |
#        cd hypolab
#        pytest

  frontend_build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js for React
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Cache npm
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-npm-

    - name: Install React dependencies
      run: |
        cd frontend
        yarn install

#    - name: Run React tests
#      run: |
#        cd frontend
#        yarn test

    - name: Build React frontend
      run: |
        cd frontend
        yarn build

#  deploy_backend:
#    runs-on: ubuntu-latest
#    needs: backend_build
#
#    steps:
#    - name: Checkout code
#      uses: actions/checkout@v2
#
#    - name: Deploy Django backend (Docker example)
#      run: |
#        cd hypolab
#        docker build -t hypolab-backend .
#        docker push hypolab-repo/hypolab-backend:latest
#
#  deploy_frontend:
#    runs-on: ubuntu-latest
#    needs: frontend_build
#
#    steps:
#    - name: Checkout code
#      uses: actions/checkout@v2
#
#    - name: Deploy React frontend (example using Netlify)
#      run: |
#        cd frontend
#        yarn build
##        netlify deploy --dir=build --prod